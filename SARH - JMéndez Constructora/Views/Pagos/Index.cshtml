@{
    ViewData["Title"] = "Pagos";
    ViewData["sidebarActive"] = "Pagos";
    var statusMessage = ViewData["StatusMessage"];
}
@model PagosViewModel
@{
    ViewData["empleados"] = Model.empleados;
}
<div class="container-fluid">
    <div class="block-header">
        @if (statusMessage != null)
        {
            if (!statusMessage.ToString().Equals(""))
            {
                <div class="alert alert-dismissible bg-info text-white" role="alert">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">×</span></button>
                    <i class="fa fa-info-circle"></i> Informacion: @ViewData["StatusMessage"]
                </div>
            }
        }
        <div class="row clearfix">
            <div class="col-md-6 col-sm-12">
                <h1>Inicio</h1>
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item">
                            <a href="../home/dashboard.html">
                                <i class="icon-home"></i>
                            </a>
                        </li>
                        <li class="breadcrumb-item">Generar Reporte de Pago</li>
                    </ol>
                </nav>
            </div>
        </div>
    </div>
    <div class="body">
        <div class="body">
            <div class="row clearfix">
                <div class="col-lg-12">
                    <div class="card">
                        <ul class="nav nav-tabs3 table-nav">
                            <li class="nav-item">
                                <a class="nav-link active show"
                                   data-toggle="tab"
                                   href="#e_add">Generar boleta de pago</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-toggle="tab" href="#e_list">Pagos Ingresados</a>
                            </li>
                        </ul>
                        <div class="tab-content">
                            <div class="tab-pane show active" id="e_add">
                                <div class="card">
                                    <partial name="_IndexIngresarPago" for="ingresoPago" view-data="ViewData" />
                                </div>
                            </div>
                            <div class="tab-pane" id="e_list">
                                <partial name="_IndexListaPagos" for="pagos" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts{
    <script>
        (function() {
            'use strict';
            
            // Hidden Fields:
            let inputIdEmpleado;
            let inputIdContrato;
            let inputSalarioHora;
            let inputSalarioBruto;
            let inputSalarioNeto;
            let inputTotalDeduccionesPatrono;
            // Input Fields
            let startDate;
            let endDate;
            let inputHorasNormales;
            let inputHorasExtras;
            let inputDiasDescanso;

            if($('#partialIngresarPago')){
                document.querySelector('#selectEmpleado')
                    .addEventListener('change', asignarContratoHora);

                document.querySelector('input[name="ingresoPago.Fin"]')
                    .addEventListener('change', calcularAll);                
                
                inputIdContrato = $('#IdContrato');
                inputIdEmpleado = $('#selectEmpleado');
                inputSalarioHora = $('#SalarioHora');
                inputSalarioBruto = $('#SalarioBruto');
                inputSalarioNeto = $('#SalarioNeto');
                inputTotalDeduccionesPatrono = $('#TotalDeduccionesPatrono');

                startDate = $('input[name="ingresoPago.Inicio"]');
                endDate = $('input[name="ingresoPago.Fin"]');
                inputHorasNormales = $('input[name="ingresoPago.HorasNormal"]');
                inputHorasNormales.on('change', calcularAll);
                inputHorasExtras = $('input[name="ingresoPago.HorasExtra"]');
                inputHorasExtras.on('change', calcularAll);
                inputDiasDescanso = $('input[name="ingresoPago.DiaDescanso"]');
                inputDiasDescanso.on('change', calcularAll);

            }

            function asignarContratoHora (e) {
                var idEmpleado = $('#selectEmpleado').val();
                $.ajax({
                    type: "GET",
                    url: "GetIdContrato",
                    data: { "idEmpleado": idEmpleado},
                    success: function(data) {
                        $('input#IdContrato').val(data.idContrato);
                        $('input#SalarioHora').val(data.salarioHora);
                    }
                });
            }

            function calcularAll (e) {
                if (isEmpy(inputIdEmpleado.val()) 
                    || isEmpy(inputIdContrato.val()) 
                    || isEmpy(startDate.val()) 
                    || isEmpy(endDate.val()) 
                    || (new Date(endDate.val()) - new Date(startDate.val()) <= 0 )) { 
                    //let validator = $('#partialIngresarPago').validate();
                } else {
                    if(this.id === 'ingresoPago_Fin'){
                        inputHorasNormales.val("0");
                    }
                    let pago = {
                        "IdEmpleado": inputIdEmpleado.val(),
                        "IdContrato": inputIdContrato.val(),
                        "Inicio": startDate.val(),
                        "Fin": endDate.val(),
                        "HorasNormal": inputHorasNormales.val().replace('.',','),
                        "HorasExtra": inputHorasExtras.val().replace('.',','),
                        "DiaDescanso": inputDiasDescanso.val().replace('.',',')
                    };
                    
                    $.ajax({
                        type: "GET",
                        url: "GetPreviewIngresoPago",
                        data: pago,
                        success: function(data) {
                            DisplayData(data);
                        }
                    });
                }
            }

            function DisplayData(data){
                inputSalarioBruto.val((data.salarioBruto).toString().replace('.',','));
                inputSalarioNeto.val((data.salarioNeto).toString().replace('.',','));
                inputTotalDeduccionesPatrono
                    .val((data.patronoCcss + data.patronoLpt 
                    + data.patronoRotrasInstituciones).toString().replace('.',',')); 
                inputHorasNormales.val(data.horasNormal);
                inputHorasExtras.val(data.horasExtra);
                inputDiasDescanso.val(data.diaDescanso);

                $('#patronoCCSS').html('¢' + data.patronoCcss);
                $('#patronoOtrasInstituciones').html('¢' + data.patronoRotrasInstituciones);
                $('#patronoLTP').html('¢' + data.patronoLpt);
                $('#patronoTotal').html('¢' + (data.patronoCcss 
                    + data.patronoLpt + data.patronoRotrasInstituciones).toFixed(3));
                $('#trabajadorSalarioNormal').html('¢' + data.salarioNormal);
                $('#trabajadorSalarioExtra').html('¢' + data.salarioExtras);
                $('#trabajadorDiasDescanso').html('¢' + data.salarioDiaDescanso);
                $('#deduccionesTrabajador').html('¢' + data.deducciones);
                //$('#trabajadorBancoPopular').html('¢' + data.);
                $('#trabajadorSalarioBruto').html('¢' + data.salarioBruto);
                $('#trabajadorDeducciones').html('¢' + data.deducciones);
                $('#trabajadorSalarioNeto').html('¢' + data.salarioNeto);
            }

            function isEmpy(e) { return (e === '' || e === '-1') ? true : false; }

        })();
    </script>
}