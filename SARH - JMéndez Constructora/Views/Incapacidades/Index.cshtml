@{
    ViewData["Title"] = "Incapacidades";
    ViewData["sidebarActive"] = "Incapacidades";
    var statusMessage = ViewData["StatusMessage"];
}
@model IncapacidadesViewModel
@{
    ViewData["empleados"] = Model.Empleados;
    ViewData["tipos"] = Model.Tipo;
}
<div class="container-fluid">
    <div class="block-header">
        @if (statusMessage != null)
        {
            if (!statusMessage.ToString().Equals(""))
            {
                <div class="alert alert-dismissible bg-info text-white" role="alert">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">Ã—</span></button>
                    <i class="fa fa-info-circle"></i> Informacion: @ViewData["StatusMessage"]
                </div>
            }
        }
        <div class="row clearfix">
            <div class="col-md-6 col-sm-12">
                <h1>Inicio</h1>
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item">
                            <a href="../home/dashboard.html">
                                <i class="icon-home"></i>
                            </a>
                        </li>
                        <li class="breadcrumb-item">Incapacidades</li>
                    </ol>
                </nav>
            </div>
        </div>
    </div>
    <div class="body">
        <div class="body">
            <div class="row clearfix">
                <div class="col-lg-12">
                    <div class="card">
                        <ul class="nav nav-tabs2">
                            <li class="nav-item">
                                <a class="nav-link active show"
                                   data-toggle="tab"
                                   href="#e_add">Ingresar Incapacidad</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-toggle="tab" href="#e_list">Incapacidades Ingresadas</a>
                            </li>
                        </ul>
                        <div class="tab-content">
                            <div class="tab-pane show active" id="e_add">
                                <div class="body">
                                    <partial name="_IndexIngresarIncapacidad" 
                                        for="Incapacidad" view-data="ViewData"/>
                                </div>
                            </div>
                            <div class="tab-pane" id="e_list">
                                <partial name="_IndexListaIncapacidades" 
                                        for="Incapacidades" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts { 
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/5.0.9/js/fileinput.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/5.0.9/themes/fas/theme.min.js"></script> 
    <script src="~/js/locales/es.js" type="text/javascript"></script>
    <script>
        $("#input-ke-2").fileinput({
            language: 'es',
            hideThumbnailContent: false, 
            browseClass: "btn btn-primary ",
            removeClass: "btn btn-secondary",
            allowedFileExtensions: ["pdf", "png", "jpeg", "jpg"],
            showCaption: false,
            theme: "fas",
            maxFileSize: 2048,
            removeFromPreviewOnError: true,
            overwriteInitial: false,
            previewFileIcon: '<i class="fas fa-file"></i>',
            preferIconicPreview: true, // this will force thumbnails to display icons for following file extensions
                previewFileIconSettings: { // configure your icon file extensions
                'doc': '<i class="fas fa-file-word text-primary"></i>',
                'xls': '<i class="fas fa-file-excel text-success"></i>',
                'ppt': '<i class="fas fa-file-powerpoint text-danger"></i>',
                'pdf': '<i class="fas fa-file-pdf text-danger"></i>',
                'zip': '<i class="fas fa-file-archive text-muted"></i>',
                'htm': '<i class="fas fa-file-code text-info"></i>',
                'txt': '<i class="fas fa-file-text text-info"></i>',
                'mov': '<i class="fas fa-file-video text-warning"></i>',
                'mp3': '<i class="fas fa-file-audio text-warning"></i>',
                // note for these file types below no extension determination logic 
                // has been configured (the keys itself will be used as extensions)
                'jpg': '<i class="fas fa-file-image text-danger"></i>', 
                'gif': '<i class="fas fa-file-image text-muted"></i>', 
                'png': '<i class="fas fa-file-image text-primary"></i>'    
            },
            previewFileExtSettings: { // configure the logic for determining icon file extensions
                'doc': function(ext) {
                    return ext.match(/(doc|docx)$/i);
                },
                'xls': function(ext) {
                    return ext.match(/(xls|xlsx)$/i);
                },
                'ppt': function(ext) {
                    return ext.match(/(ppt|pptx)$/i);
                },
                'zip': function(ext) {
                    return ext.match(/(zip|rar|tar|gzip|gz|7z)$/i);
                },
                'htm': function(ext) {
                    return ext.match(/(htm|html)$/i);
                },
                'txt': function(ext) {
                    return ext.match(/(txt|ini|csv|java|php|js|css)$/i);
                },
                'mov': function(ext) {
                    return ext.match(/(avi|mpg|mkv|mov|mp4|3gp|webm|wmv)$/i);
                },
                'mp3': function(ext) {
                    return ext.match(/(mp3|wav)$/i);
                }
            }
        });
    </script>
    
}